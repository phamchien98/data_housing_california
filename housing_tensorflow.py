# -*- coding: utf-8 -*-
"""housing_tensorflow.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o9LPLS0nSbG7tEdrv4Z9xFGnLHMXNbdd
"""

import os
import tensorflow as tf
import sklearn
import numpy as np
import pandas as pd
import warnings
warnings.filterwarnings('ignore')



housing = pd.read_csv("./housing.csv")

housing.info()

housing.head()

median = housing['total_bedrooms'].median()

housing['total_bedrooms'].fillna(median,inplace = True)

housing_dummies = pd.get_dummies(housing,prefix = ['ocean_proximity'])

housing_dummies.head()

sum_col = ['longitude','latitude','housing_median_age','total_rooms','total_bedrooms','population','households','median_income','ocean_proximity_<1H OCEAN','ocean_proximity_INLAND','ocean_proximity_ISLAND','ocean_proximity_NEAR BAY','ocean_proximity_NEAR OCEAN']

x_housing = housing_dummies[sum_col].values

y_housing = housing_dummies[['median_house_value']].values

housing_dummies.head()

x_housing[[0]]

x_housing.shape

print(type(x_housing))

y_housing.shape

y_housing[[0]]

from sklearn.model_selection import train_test_split
X_train, X_validation, y_train, y_validation = train_test_split(x_housing,y_housing, test_size=0.3, random_state=1)

x_placeholder=tf.placeholder(tf.float32,shape=[None,13], name='x_placeholder')
y_placeholder=tf.placeholder(tf.float32,shape=[None,1], name='y_placeholder')

weight=tf.Variable(tf.random.truncated_normal(shape=(1,13)),name='weight')
bias=tf.Variable(tf.random.truncated_normal(shape=(1,1)),name='bias')

predict=tf.math.add(tf.linalg.matmul(x_placeholder,tf.transpose(weight)),bias)

loss=tf.losses.mean_squared_error(labels=y_placeholder,predictions=predict)
#===== end model===

#===== start learning algorithm ====
optimizer=tf.train.GradientDescentOptimizer(learning_rate=0.001)

thaotac_gan_cho_tat_ca_cac_bien=optimizer.minimize(loss=loss)

sess=tf.Session()
sess.run(tf.global_variables_initializer())

for i in range(100):
 
  print(sess.run([loss],feed_dict={x_placeholder:x_housing,y_placeholder:y_housing}))
  sess.run([thaotac_gan_cho_tat_ca_cac_bien],feed_dict={x_placeholder:x_housing,y_placeholder:y_housing})
print(sess.run([weight,bias]))

